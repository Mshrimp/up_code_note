结构体：
	struct 结构体名 变量名

	数组关系 .
	指针关系 ->
	函数关系 值 地址
		不可以返回栈中地址 局部变量
	
	#pragma pack(num)
		指定对齐方式，num必须是2的次幂
	空间大小：
		32 -> 4
	指定位宽：只是针对结构体成员
======================
宏命令：
	# : 字符串链接符 保持参数名不变
	##: 字符链接

	#undef 取消宏
	宏必须是一行，如果多行，则需要一个续行符\

条件编译
	
	#if 常量 宏
	#else
	#endif
	预处理也会处理注释，直接删除

	#if 
	#elif
	....
	#else
	#endif

	#ifndef 宏
		如果宏存在，则不执行
		如果不存在，则执行
	#ifdef 宏
		如果宏存在，则执行
		如果不存在，则不执行
	#endif 结尾
特殊字符：
	__LINE__ : 表示行号
	__func__ : 表示函数名
	__FILE__ : 表示文件名
	__TIME__ : 表示时间
	__DATE__ : 表示日期
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
file IO:
	打开文件：
		FILE *fopen(const char *path, const char *mode);
		第一个参数：表示文件路径
			相对路径：以当前用户工作目录为起点
			绝对路径：以/目录为起点
		第二个参数：表示操作文件模式(权限)
			chmod : 表示用户对文件操作权限
			mode  : 表示当前进程对文件执行操作。
			r	:只读方式
				如果文件不存在，则打开失败。
				如果文件存在，则文件指针指向文件开头。
			r+	:读写方式
				如果文件不存在，则打开失败
				如果文件存在，则文件指针指向文件开头
					写：覆盖的方式写入数据。
			w	: 只写方式
				如果文件不存在，则创建
				如果文件存在，则清空，同时文件指针指向文件开头
			w+	:读写方式打开
				如果文件不存在，则创建
				如果存在，清空，指向文件头
			a	:追加写
				如果文件不存在，则创建
				如果文件存在，则追加到文件结尾

			a+	:读写
				文件不存在，则创建
				文件存在，读文件开头
				写指向文件结尾。

		返回值：文件指针
			成功：文件指针
			失败：NULL

	关闭文件：
		fclose
	读取文件内容：
	读取一个字符：
		int fgetc(FILE *stream) 获取一个字符
		返回值：
			失败：EOF

	写入一个字符：
		int fputc(int c, FILE *stream);
		第一个参数：表示写入字符
		第二个参数：表示文件指针

	容错函数：
		perror()
		strerror()
		int errno;

	练习：
		实现cp
			diff file1 file2

		cp src dest
		a.out file1 file2

	按行读写：
		读：
		char *fgets(char *s, int size, FILE *stream);
		第一个参数：表示存储空间地址
		第二个参数：表示空间大小
		第三个参数：表示文件指针
		返回值：
			成功：指向存储空间地址
			失败：NULL
		
		写：
		int fputs(const char *s, FILE *stream);
		第一个参数：表示写入数据
		第二个参数：表示操作文件
		返回值：
			成功：表示正数
			失败：表示负数 EOF
	按缓冲区大小操作：
		char buf[1024] ?
		读：
			size_t  fread(void  *ptr,  size_t  size,  size_t  nmemb,  FILE
			       *stream);
			第一个参数：表示存储空间地址 缓冲区
			第二个参数：表示块大小  数据类型1024    1
			第三个参数：表示多少块  数据长度1		1024
			第四个参数：表示可操作文件
			返回值：表示多少个块或者数据长度
				成功：> 0
				失败：<= 0
				
		写：
			size_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE
			       *stream);
	123 hello
	按格式读和写：
		写：
			int fprintf(FILE *stream, const char *format, ...);
			第一个参数：表示文件指针
			第二个参数：表示数据格式
			。。。	  ： 表示不定参
		读：
			int fscanf(FILE *stream, const char *format, ...);


	homewrok:
		1 cp  fread fwrite
			验证是否可以拷贝二进制文件
		2 实现grep
			grep key filename
			1):显示行号
			2):关键字高亮显示

			



		






数组传参：
	1 数组名
	2 数组大小

	vt:
=========================
指针：
	32操作系统下，指针空间大小是4个字节
	
	void *malloc(size_t size);
	参数：申请空间大小
	返回类型
		成功：则指向一个内存空间地址
		失败：NULL
	void free(void *ptr);释放内存空间

	void *calloc(size_t nmemb, size_t size);
	第一个参数：表示数据个数
	第二个参数：表示数据类型

	void *realloc(void *ptr, size_t size);
	第一个参数：表示原来申请空间地址
	第二个参数：表示总的空间大小
	
	32系统下，每一个进程都有0 - 4G虚拟内存空间
	地址由高到底：
		系统态：3 - 4G
		用户态：0 - 3G
			由高到底：
				stack	:	局部变量或者临时变量 模块变量
					由高到底
				heap	:	动态内存 malloc
					由底到高
				DS:			存放全局变量和静态变量
					BSS	:	未初始化
					RO	:	初始化
				const	:	
				code	:	代码
========================================
	static:
		1 修饰局部变量
			局部变量只能被当前函数访问，如果静态修饰，则整个函数都可以访问。
		2 修饰外部变量
			外部变量可以所有文件访问。被静态修饰，则只能被本文件中的函数访问
		3 修饰函数
			如果是动态函数，则可以被所有函数调用，如果添加static，则只能被被文件中的函数调用。
	const:
		
=============================
一级指针和一维数组关系
	
	1 修改弹球程序
		移动功能封装
	2 实现str家族函数 *
	3 实现动态数组(int) -> malloc * 
	4 输入字符串，删除其中空格
	5 输入一个字符串，统计有多少个单词














